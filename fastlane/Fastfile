fastlane_version "2.26.0"

default_platform :ios

platform :ios do
  before_all do
  end

  desc "Runs all the tests"
  lane :test do
    cocoapods
    scan(
      scheme: "ShinyGemHunterSlots",
      workspace: "ShinyGemHunterSlots.xcworkspace",
      clean: true,
      code_coverage: true,
      skip_slack: true,
      sdk: "iphonesimulator10.3",
      devices: ["iPad Air 2"]
    )
  end

  desc "Creating a code signing certificate and provisioning profile"
  lane :provision do
    produce(
      app_name: "ShinyGemHunterSlots",
      language: "English",
      app_version: "1.0",
      sku: "com.vantanllc.ShinyGemHunterSlots"
      )

    cert

    sigh(force: true)
  end

  desc "Create ipa"
  lane :build do
    cocoapods
    create_keychain(
      name: ENV["SIGNING_KEYCHAIN"],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: true,
      password: ENV["SIGNING_KEYCHAIN_PASSWORD"],
      add_to_search_list: true
    )

    import_certificate(
      certificate_path: "vantan.llc.ios.distribution.p12",
      certificate_password: ENV["DISTRIBUTION_CERTIFICATE_PASSWORD"],
      keychain_name: ENV["SIGNING_KEYCHAIN"]
    )

    sh("security set-key-partition-list -S apple-tool:,apple: -s -k $SIGNING_KEYCHAIN_PASSWORD $SIGNING_KEYCHAIN")

    sigh

    current_build_number = latest_testflight_build_number(initial_build_number: 1)
    increment_build_number(build_number: current_build_number + 1)

    gym(
      scheme: "ShinyGemHunterSlots",
      clean: true,
      include_bitcode: false,
      include_symbols: true,
    )

    delete_keychain(name: ENV["SIGNING_KEYCHAIN"])
  end

  desc "Upload to App Store"
  lane :upload_metadata do
    deliver(
      force: true,
      skip_binary_upload: true,
      price_tier: 0,
      app_rating_config_path: './fastlane/metadata/itunes_rating_config.json',
      automatic_release: true,
      overwrite_screenshots: true,
      app_icon: './icon/Icon-1024.png'
    )
  end

  desc "Deploy to Testflight"
  lane :beta do
    testflight(
      wait_processing_interval: 30,
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )
  end

  desc "Calculate test code coverage score. Need to run test beforehand."
  lane :report_test_coverage do
    xcov(
      workspace: "ShinyGemHunterSlots.xcworkspace",
      scheme: "ShinyGemHunterSlots",
      output_directory: "xcov_output"
    )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
